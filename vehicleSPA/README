This is another Single Page Application (SPA) I created using Knockout.js and the Model, View, View-Model (MVVM) architectural pattern. This application is more complicated than the other SPA I have in my portfolio. I say that because this application allows you to persist multiple "Shopping Cart Lines" to the database at the same time using jQuery AJAX posts. The focus of this project was on using AJAX to persist cart orders to the database while familiarizing myself with how models, interfaces, database entities, view-models, and views intertwine and work together within the .NET framework (.NET MVC) and Visual Studio. This was one of the most challenging projects that I have completed to date, other than configuring and implementing an external login method using the Facebook API during my internship experience, because I was simply told by an instructor to take a Knockout.js front end and figure out how to persist orders to the database without any further instruction. This led to me rapidly learning and figuring out how to use jQuery AJAX posts to persist to the database. My biggest issue came from trying to save multiple records to the database using AJAX. It wasn't until I figured out that I had to create a new database context for each record that I was able to get the application to function properly. Throughout the process of debugging the application, I stepped through the code and was able to solidify how all of the different elements and layers are connected in my mind. Although this application does not have a polished front-end that would be anywhere close to Production ready, I am proud that I was able to figure out how to get the backend functionality working as desired. 
